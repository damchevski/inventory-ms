
swagger: '2.0'
info:
  title: Inventory MS
  version: "0.1"
  description: Microservice for inventory
consumes:
  - application/json
produces:
  - application/json
basePath: "/api"

paths:

  /create/product_buy:
    post:
      tags: [ ProductBuy ]
      operationId: app.create_product_buy
      parameters:
        - $ref : '#/parameters/product_buy_body'
      responses:
        200:
          description: Product created
        409:
          description: Product already exists

#  /test1/{test1_id}:
#    get:
#      tags: [ Test1 ]
#      operationId: app.get_test
#      summary: Testing endpoint
#      parameters:
#        - $ref: '#/parameters/test1_id'
#      responses:
#        200:
#          description: Return test1
#        404:
#          description: Does not exist
#  /person/:
#    post:
#      tags: [ Person ]
#      operationId: controllers.test.person_add
#      parameters:
#        - $ref: '#/parameters/person_body'
#      responses:
#        200:
#          description: Return status
#        409:
#          description: Already exists
#  /person/{person_name}:
#    get:
#      tags: [ Person ]
#      operationId: controllers.test.person_find
#      parameters:
#        - $ref: '#/parameters/person_name'
#      responses:
#        200:
#          description: Return person object
#        404:
#          description: Person not found

parameters:

  product_buy_body:
    name: product_buy_body
    description: Input for Product Buy
    in: body
    schema:
      required:
        - name
      properties:
        name:
          type: string
        price:
          type: integer
        description:
          type: string
        image:
          type: string
        category:
          type: string
        brand:
          type: string
        quantity:
          type: integer

#  test1_id:
#    name: test1_id
#    description: Test1 unique id
#    in: path
#    type: string
#    required: true
#    pattern: "^[a-zA-Z0-9-]+$"
#
#  person_body:
#    name: person_body
#    description: Test1 unique id
#    in: body
#    schema:
#      required:
#        - name
#      properties:
#        name:
#          type: string
#        surname:
#          type: string
#
#  person_name:
#    name: person_name
#    description: The name of the person we're looking for
#    in: path
#    required: true
#    type: string
